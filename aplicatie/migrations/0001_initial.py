# Generated by Django 5.1.1 on 2025-01-11 21:10

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Actor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume_actor', models.CharField(max_length=30)),
                ('varsta_actor', models.PositiveIntegerField()),
                ('nationalitate', models.CharField(max_length=30)),
            ],
        ),
        migrations.CreateModel(
            name='BluRay',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titlu', models.CharField(max_length=50)),
                ('calitate_video', models.CharField(max_length=10)),
                ('pret', models.DecimalField(decimal_places=2, max_digits=5)),
                ('stoc', models.PositiveIntegerField()),
                ('subtitrari', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Director',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume_director', models.CharField(max_length=30)),
                ('nationalitate_director', models.CharField(max_length=30)),
                ('experienta', models.PositiveIntegerField()),
                ('varsta_director', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Gen',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('denumire_gen', models.CharField(max_length=30)),
                ('descriere_gen', models.TextField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('telefon', models.CharField(max_length=15)),
                ('adresa', models.TextField(blank=True, null=True)),
                ('data_nasterii', models.DateField()),
                ('ocupatie', models.CharField(blank=True, max_length=100, null=True)),
                ('descriere_personala', models.TextField(blank=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Film',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume_film', models.CharField(max_length=50)),
                ('descriere_film', models.TextField(blank=True, max_length=300, null=True)),
                ('durata_film', models.DurationField()),
                ('data_lansare', models.DateField()),
                ('pt_adulti', models.BooleanField(default=False)),
                ('bluray', models.ManyToManyField(to='aplicatie.bluray')),
                ('director', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aplicatie.director')),
                ('gen', models.ManyToManyField(to='aplicatie.gen')),
            ],
        ),
        migrations.CreateModel(
            name='Caracter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nume_caracter', models.CharField(max_length=30)),
                ('rol', models.CharField(choices=[('PROTAGONIST', 'Protagonist'), ('ANTAGONIST', 'Antagonist'), ('SECUNDAR', 'Secundar')])),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='aplicatie.actor')),
                ('film', models.ManyToManyField(to='aplicatie.film')),
            ],
        ),
    ]
